
SELECT SYSDATE FROM DUAL;

ALTER SESSION SET NLS_DATE_FORMAT = 'dd/mm/yyyy';

-- EXCLUSÃO DAS SEQUENCES
DROP SEQUENCE SEQ_CONSULTAS;
DROP SEQUENCE SEQ_MEDICOS;
DROP SEQUENCE SEQ_CLIENTES;

-- EXCLUSÃO DAS TABELAS NA ORDEM CORRETA.
DROP TABLE CONSULTAS;
DROP TABLE MEDICOS;
DROP TABLE CLIENTES;

--COMO FORMA DE ORGANIZAR PODEMOS CRIAR TODAS AS TABELAS
--DEPOIS TODAS AS SEQUENCES, VEJA:

CREATE TABLE MEDICOS (
    CODIGO INTEGER NOT NULL PRIMARY KEY,
    CRM VARCHAR2(20) NOT NULL,
    NOME VARCHAR2(500) NOT NULL,
    ESPECIALIDADE VARCHAR2(100) NOT NULL,
    CONSTRAINT UN_CRM UNIQUE(CRM)
);

CREATE TABLE CLIENTES(
    CODIGO INTEGER NOT NULL PRIMARY KEY,
    NOME VARCHAR2(500) NOT NULL,
    CPF VARCHAR2(12) NOT NULL,
    EMAIL VARCHAR2(1024) NOT NULL,
    SENHA VARCHAR2(64) NOT NULL,
    DATA_NASCIMENTO DATE NOT NULL,
    ENDERECO_LOGRADOURO VARCHAR2(1000) NOT NULL,
    ENDERECO_NUMERO VARCHAR2(10) NOT NULL,
    ENDERECO_COMPLEMENTO VARCHAR2(50) NOT NULL,
    ENDERECO_BAIRRO VARCHAR2(100) NOT NULL,
    ENDERECO_CIDADE VARCHAR2(100) NOT NULL,
    ENDERECO_UF VARCHAR2(2) NOT NULL,
    ENDERECO_CEP VARCHAR2(8) NOT NULL,
    
    CONSTRAINT UN_CPF UNIQUE(CPF),
    CONSTRAINT UN_EMAIL UNIQUE(EMAIL)
);

--CASO VC USE O 23C (QUE SUPORTA BOOLEAN)
--HTTPS://ORACLE-BASE.COM/ARTICLES/23C/BOOLEAN-DATA-TYPE-23C

CREATE TABLE CONSULTAS(
    CODIGO INTEGER NOT NULL PRIMARY KEY,
    DATA_HORA_AGENDAMENTO DATE DEFAULT SYSDATE,
    DATA_HORA_ATENDIMENTO DATE NOT NULL,
    ACEITE CHAR(1) DEFAULT 'N',
    REALIZADA CHAR(1) DEFAULT 'N',
    CLIENTE INTEGER NOT NULL,
    MEDICO INTEGER NOT NULL,
    CONSTRAINT CK_ACEITE_S_OU_N CHECK (ACEITE IN('S','N')),
    CONSTRAINT CK_REALIZADA_S_OU_N CHECK (REALIZADA IN('S','N')),
    CONSTRAINT FK_CONSULTA_CLIENTE FOREIGN KEY (CLIENTE) REFERENCES CLIENTES(CODIGO),
    CONSTRAINT FK_CONSULTA_MEDICO FOREIGN KEY (MEDICO) REFERENCES MEDICOS(CODIGO)
);

--CRIANDO AS SEQUENCES EM EXEMPLOS VARIADOS
CREATE SEQUENCE SEQ_MEDICOS START WITH 100 INCREMENT BY 1;
CREATE SEQUENCE SEQ_CLIENTES START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_CONSULTAS START WITH 1000 INCREMENT BY 1;

--INSERINDO UM MEDICO
INSERT INTO MEDICOS
(CODIGO, CRM, NOME, ESPECIALIDADE)
VALUES
(SEQ_MEDICOS.NEXTVAL, '1234', 'JOSE PEDRO', 'CARDIOLOGISTA');

--INSERINDO UM CLIENTE DO PLANO DE SAUDE
INSERT INTO CLIENTES(
    CODIGO,
    NOME,
    CPF,
    EMAIL,
    SENHA,
    DATA_NASCIMENTO,
    ENDERECO_LOGRADOURO,
    ENDERECO_NUMERO,
    ENDERECO_COMPLEMENTO,
    ENDERECO_BAIRRO,
    ENDERECO_CIDADE,
    ENDERECO_UF,
    ENDERECO_CEP)
VALUES(
    SEQ_CLIENTES.NEXTVAL,
    'RAQUEL APARECIDA SOUZA',
    '12312312312',
    'RAQUELTESTE@TESTE.COM.BR',
    'SENHA CRIPTOGRAFADA AQUI.',
    --PRECISAMOS INSERIR A DATA CONVERTENDO STRING EM DATA.
    --COMO A DATA DE NASCIMENTO NÃO PRECISAMOS DA HORA...
    TO_DATE('30/12/1990', 'dd/mm/yyyy'),
    'AV. BRASIL',
    '1000-A',
    'TORRE 3',
    'CRISTO REDENTOR',
    'RIBEIRÃO PRETO',
    'SP',
    '16442129'
);
--INSERINDO UMA CONSULTA PARA A RAQUEL
INSERT INTO CONSULTAS(
CODIGO, DATA_HORA_ATENDIMENTO, CLIENTE, MEDICO)
VALUES(
    SEQ_CONSULTAS.NEXTVAL,
    TO_DATE('01/11/2023 15:30:00', 'dd/mm/yyyy hh24:mi:ss'),
    1,
    100
)

ALTER TABLE MEDICOS
ADD STATUS CHAR(1) DEFAULT 'A';

ALTER TABLE MEDICOS
ADD CONSTRAINT CK_MEDICO_STATUS 
CHECK (STATUS IN ('A', 'I'));

CREATE OR REPLACE FUNCTION ATIVAR_INATIVAR_MEDICO (
in_medico_codigo PLS_INTEGER, 
in_status CHAR
)
RETURN 
    PLS_INTEGER
IS
BEGIN
    UPDATE MEDICOS 
    SET STATUS = in_status
    WHERE CODIGO = in_medico_codigo;
    
    RETURN 1
END;

-- TODO
-- CRIAR UMA TABELA CHAMADA LOGS, TODA VEZ QUE ALGUEM OU QUALQUER USUARIO CHAMAR A FUNÇÃO ATIVAR E INATIVAR MEDICO, 
-- ALEM DO UPDATE NA TABELA MEDICOS, TERA QUE INSERIR UM REGISTRO NA TABELA LOGS DE QUAL MEDICO E QUAL STATUS FOI ALTERADO 'DE' 'PARA'