CREATE TABLE DEPARTAMENTOS(
    CODIGO INTEGER NOT NULL PRIMARY KEY,
    NOME VARCHAR2(500) NOT NULL
);

INSERT INTO DEPARTAMENTOS
(CODIGO, NOME)
VALUES
(1, 'DIRETORIA');

INSERT INTO DEPARTAMENTOS
(CODIGO, NOME)
VALUES
(2, 'RH');

CREATE TABLE FUNCIONARIOS(
    CODIGO INTEGER NOT NULL PRIMARY KEY,
    NOME VARCHAR2(500) NOT NULL,
    RG VARCHAR2(50),
    SALARIO NUMBER(8,2) NOT NULL,
    DEPARTAMENTO INTEGER NOT NULL,
    CONSTRAINT FK_FUNCIONARIO_DEPARTAMENTO FOREIGN KEY
    (DEPARTAMENTO) REFERENCES DEPARTAMENTOS(CODIGO)
);

INSERT INTO FUNCIONARIOS
(CODIGO, NOME, RG, SALARIO, DEPARTAMENTO)
VALUES
(100, 'GUILHERME JORGE', NULL, 10000.00, 1);

INSERT INTO FUNCIONARIOS
(CODIGO, NOME, RG, SALARIO, DEPARTAMENTO)
VALUES
(101, 'ROQUE STRINGHINI', '123456', 9999.00, 2);

INSERT INTO FUNCIONARIOS
(CODIGO, NOME, RG, SALARIO, DEPARTAMENTO)
VALUES
(102, 'BEATRIZ MELONI', NULL, 52531.21, 1);



-- SOMA AGRUPAMENTO
-- FAZER A SOMA DE SALÁRIOS (AGRUPANDO POR DEPARTAMENTO)
-- SABER QUANTO DEPARTAMENTO CUSTA
SELECT SUM(F.SALARIO) TOTAL_FOLHA_DEPARTAMENTO FROM FUNCIONARIOS F
GROUP BY F.DEPARTAMENTO;

-- EXIBINDO O NOME DO DEPARTAMENTO COM O VALOR DA FOLHA DAQUELE DEPARTAMENTO
SELECT D.NOME, SUM(F.SALARIO) CUSTO_FOLHA
FROM DEPARTAMENTOS D
INNER JOIN FUNCIONARIOS F ON D.CODIGO = F.DEPARTAMENTO
GROUP BY D.NOME;

-- INSERINDO UM DEPARTAMENTO QUE NAO TEM FUNCIONARIO
INSERT INTO DEPARTAMENTOS (CODIGO, NOME)
VALUES (3, 'PESQUISA');

-- MISSÃO: MOSTRAR O CUSTO POR DEPARTAMENTO, INCLUSIVE CUSTO 0 PARA DEPARTAMENTO SEM FUNCIONARIO
-- #TODO TRANSFORMAR O NULL EM 0
SELECT D.NOME, SUM(F.SALARIO) CUSTO_FOLHA
FROM DEPARTAMENTOS D
LEFT JOIN FUNCIONARIOS F ON D.CODIGO = F.DEPARTAMENTO
GROUP BY D.NOME;

-- MISSÃO: EXIBIR UMA LISTA CONTENDO O NOME DO FUNCIONARIO E O NOME DO DEPARTAMENTO QUE ELE TRABALHA 
-- ORDENANDO PELO DEPARTAMENTO (NOME) DEPOIS PELO NOME DO FUNCIONARIO
SELECT F.NOME, D.NOME
FROM DEPARTAMENTOS D
INNER JOIN FUNCIONARIOS F ON D.CODIGO = F.DEPARTAMENTO
ORDER BY D.NOME, F.NOME;

-- CRIAR UMA VIEW QUE EXIBE A LISTA DE DEPARTAMENTOS E FUNCIONARIOS:
CREATE OR REPLACE VIEW VIEW_LISTA_DEPTOS_FUNCS AS 
    SELECT F.NOME NOME_FUNCIONARIO, D.NOME NOME_DEPARTAMENTO
    FROM DEPARTAMENTOS D
    INNER JOIN FUNCIONARIOS F ON D.CODIGO = F.DEPARTAMENTO
    ORDER BY D.NOME, F.NOME;

SELECT * FROM VIEW_LISTA_DEPTOS_FUNCS;


